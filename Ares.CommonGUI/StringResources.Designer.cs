//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18052
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ares.CommonGUI {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class StringResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal StringResources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ares.CommonGUI.StringResources", typeof(StringResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key {0} is used for elements {1} and {2} ähnelt.
        /// </summary>
        internal static string DuplicateModeElementKey {
            get {
                return ResourceManager.GetString("DuplicateModeElementKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key {0} is used for modes {1} and {2} ähnelt.
        /// </summary>
        internal static string DuplicateModeKey {
            get {
                return ResourceManager.GetString("DuplicateModeKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This key is reserved for global control ähnelt.
        /// </summary>
        internal static string KeyGloballyReserved {
            get {
                return ResourceManager.GetString("KeyGloballyReserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This key is already used to select the mode &quot;{0}&quot; ähnelt.
        /// </summary>
        internal static string KeyUsedByMode {
            get {
                return ResourceManager.GetString("KeyUsedByMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This key is already used to start &quot;{0}&quot; ähnelt.
        /// </summary>
        internal static string KeyUsedByModeElement {
            get {
                return ResourceManager.GetString("KeyUsedByModeElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key {0} is reserved for global control ähnelt.
        /// </summary>
        internal static string ModeElementKeyGloballyReserved {
            get {
                return ResourceManager.GetString("ModeElementKeyGloballyReserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key {0} is used for element {1} and mode {2} ähnelt.
        /// </summary>
        internal static string ModeElementKeyUsedByMode {
            get {
                return ResourceManager.GetString("ModeElementKeyUsedByMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No key defined for element {0} ähnelt.
        /// </summary>
        internal static string ModeElementNoKey {
            get {
                return ResourceManager.GetString("ModeElementNoKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key {0} is reserved for global control ähnelt.
        /// </summary>
        internal static string ModeKeyGloballyReserved {
            get {
                return ResourceManager.GetString("ModeKeyGloballyReserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No key defined for mode {0} ähnelt.
        /// </summary>
        internal static string ModeNoKey {
            get {
                return ResourceManager.GetString("ModeNoKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please choose a directory for the settings. ähnelt.
        /// </summary>
        internal static string NeedDirectory {
            get {
                return ResourceManager.GetString("NeedDirectory", resourceCulture);
            }
        }
    }
}
