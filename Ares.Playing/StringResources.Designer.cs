//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ares.Playing {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class StringResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal StringResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ares.Playing.StringResources", typeof(StringResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load BASS AAC add-on library. Installation problem?.
        /// </summary>
        internal static string BassAacLoadFail {
            get {
                return ResourceManager.GetString("BassAacLoadFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device already initialized..
        /// </summary>
        internal static string BassDeviceAlready {
            get {
                return ResourceManager.GetString("BassDeviceAlready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No device driver available. Are soundcard and speakers installed properly? Is the device in use by another application?.
        /// </summary>
        internal static string BassDeviceDriver {
            get {
                return ResourceManager.GetString("BassDeviceDriver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sound device doesn&apos;t support 44kHz sampling..
        /// </summary>
        internal static string BassDeviceFormat {
            get {
                return ResourceManager.GetString("BassDeviceFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device: {0}, Driver: {1}, State: {2}.
        /// </summary>
        internal static string BassDeviceInfo {
            get {
                return ResourceManager.GetString("BassDeviceInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid device. Are soundcard and speakers installed properly?.
        /// </summary>
        internal static string BassDeviceInvalid {
            get {
                return ResourceManager.GetString("BassDeviceInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load BASS Flac add-on library. Installation problem?.
        /// </summary>
        internal static string BassFlacLoadFail {
            get {
                return ResourceManager.GetString("BassFlacLoadFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load BASS Fx add-on library. Installation problem?.
        /// </summary>
        internal static string BassFxLoadFail {
            get {
                return ResourceManager.GetString("BassFxLoadFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal: Couldn&apos;t initialize BASS engine!
        ///Error message: {0}
        ///{1}.
        /// </summary>
        internal static string BassInitFail {
            get {
                return ResourceManager.GetString("BassInitFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load BASS library. Installation problem?.
        /// </summary>
        internal static string BassLoadFail {
            get {
                return ResourceManager.GetString("BassLoadFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device has no 3D support..
        /// </summary>
        internal static string BassNo3D {
            get {
                return ResourceManager.GetString("BassNo3D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is insufficient memory..
        /// </summary>
        internal static string BassNoMem {
            get {
                return ResourceManager.GetString("BassNoMem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load BASS Opus add-on library. Installation problem?.
        /// </summary>
        internal static string BassOpusLoadFail {
            get {
                return ResourceManager.GetString("BassOpusLoadFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown error. Are soundcard and speakers installed properly?.
        /// </summary>
        internal static string BassUnknown {
            get {
                return ResourceManager.GetString("BassUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sample buffer was lost.
        /// </summary>
        internal static string BufLostError {
            get {
                return ResourceManager.GetString("BufLostError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unavailable codec.
        /// </summary>
        internal static string CodecError {
            get {
                return ResourceManager.GetString("CodecError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t create the file.
        /// </summary>
        internal static string CreateError {
            get {
                return ResourceManager.GetString("CreateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        internal static string Default {
            get {
                return ResourceManager.GetString("Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to disabled.
        /// </summary>
        internal static string DeviceDisabled {
            get {
                return ResourceManager.GetString("DeviceDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to enabled.
        /// </summary>
        internal static string DeviceEnabled {
            get {
                return ResourceManager.GetString("DeviceEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal device number.
        /// </summary>
        internal static string DeviceError {
            get {
                return ResourceManager.GetString("DeviceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t find a driver.
        /// </summary>
        internal static string DriverError {
            get {
                return ResourceManager.GetString("DriverError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No sufficient DirectX version installed.
        /// </summary>
        internal static string DxError {
            get {
                return ResourceManager.GetString("DxError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Channel / file has ended.
        /// </summary>
        internal static string EndedError {
            get {
                return ResourceManager.GetString("EndedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported file format.
        /// </summary>
        internal static string FileformError {
            get {
                return ResourceManager.GetString("FileformError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t open the file.
        /// </summary>
        internal static string FileOpenError {
            get {
                return ResourceManager.GetString("FileOpenError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error playing the file: {0}.
        /// </summary>
        internal static string FilePlayingError {
            get {
                return ResourceManager.GetString("FilePlayingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported sample format.
        /// </summary>
        internal static string FormatError {
            get {
                return ResourceManager.GetString("FormatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal sample rate.
        /// </summary>
        internal static string FreqError {
            get {
                return ResourceManager.GetString("FreqError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid handle.
        /// </summary>
        internal static string HandleError {
            get {
                return ResourceManager.GetString("HandleError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal parameter specified.
        /// </summary>
        internal static string IllParamError {
            get {
                return ResourceManager.GetString("IllParamError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal type specified.
        /// </summary>
        internal static string IllTypeError {
            get {
                return ResourceManager.GetString("IllTypeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory error.
        /// </summary>
        internal static string MemError {
            get {
                return ResourceManager.GetString("MemError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No 3D support.
        /// </summary>
        internal static string No3DError {
            get {
                return ResourceManager.GetString("No3DError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t get a free channel.
        /// </summary>
        internal static string NoChanError {
            get {
                return ResourceManager.GetString("NoChanError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No sound device found..
        /// </summary>
        internal static string NoDevice {
            get {
                return ResourceManager.GetString("NoDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No sound device driver found..
        /// </summary>
        internal static string NoDeviceDriver {
            get {
                return ResourceManager.GetString("NoDeviceDriver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No EAX support.
        /// </summary>
        internal static string NoEaxError {
            get {
                return ResourceManager.GetString("NoEaxError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Effects are not available.
        /// </summary>
        internal static string NoFxError {
            get {
                return ResourceManager.GetString("NoFxError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No hardware voices available.
        /// </summary>
        internal static string NoHwError {
            get {
                return ResourceManager.GetString("NoHwError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not playing.
        /// </summary>
        internal static string NoPlayError {
            get {
                return ResourceManager.GetString("NoPlayError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not an audio track.
        /// </summary>
        internal static string NotAudioError {
            get {
                return ResourceManager.GetString("NotAudioError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream is not a file stream.
        /// </summary>
        internal static string NotFileError {
            get {
                return ResourceManager.GetString("NotFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The channel is playing.
        /// </summary>
        internal static string PlayingError {
            get {
                return ResourceManager.GetString("PlayingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid playback position.
        /// </summary>
        internal static string PositionError {
            get {
                return ResourceManager.GetString("PositionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error setting an effect: {0}.
        /// </summary>
        internal static string SetEffectError {
            get {
                return ResourceManager.GetString("SetEffectError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error setting the volume: {0}.
        /// </summary>
        internal static string SetVolumeError {
            get {
                return ResourceManager.GetString("SetVolumeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unavailable speaker, or file is stereo..
        /// </summary>
        internal static string SpeakerError {
            get {
                return ResourceManager.GetString("SpeakerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configured speaker is not available..
        /// </summary>
        internal static string SpeakerNotAvailable {
            get {
                return ResourceManager.GetString("SpeakerNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Streaming error: {0}.
        /// </summary>
        internal static string StreamingError {
            get {
                return ResourceManager.GetString("StreamingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tagged Music.
        /// </summary>
        internal static string TaggedMusic {
            get {
                return ResourceManager.GetString("TaggedMusic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error accessing tags database:
        ///{0}.
        /// </summary>
        internal static string TagsDbError {
            get {
                return ResourceManager.GetString("TagsDbError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error: {0}.
        /// </summary>
        internal static string UnexpectedError {
            get {
                return ResourceManager.GetString("UnexpectedError", resourceCulture);
            }
        }
    }
}
